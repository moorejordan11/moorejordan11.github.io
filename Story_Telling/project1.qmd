---
title: "Client Report - Project 1"
subtitle: "Course DS 250"
author: "Jordan Moore"
format:
  html:
    self-contained: true
    page-layout: full
    title-block-banner: true
    toc: true
    toc-depth: 3
    toc-location: body
    number-sections: false
    html-math-method: katex
    code-fold: true
    code-summary: "Show the code"
    code-overflow: wrap
    code-copy: hover
    code-tools:
        source: false
        toggle: true
        caption: See code
execute: 
  warning: false
    
---

```{python}
#| label: libraries
#| include: false
import pandas as pd
import numpy as np
import plotly.express as px
import seaborn as sns
import matplotlib.pyplot as plt
import math
```

## Elevator pitch

- Below is the comparison of names throughout the history and chosen names that were given by you charted out. The charts will show the name Jordan throughout the years, will help determine if you were talking to someone named Brittany how old would you think they were based off of the data? The data will show the history of Mary, Martha, Paul, and Peter which were some of the most popular names mentioned from the New Testament in the Bible. We can see the correlation between certain names as they pertain to movies like Top-Gun and E.T.

```{python}
#| label: project-data
#| code-summary: code

# Learn morea about Code Cells: https://quarto.org/docs/reference/cells/cells-jupyter.html

# Include and execute your code here
df = pd.read_csv("https://raw.githubusercontent.com/byuidatascience/data4names/master/data-raw/names_year/names_year.csv")

```


## Question\|Task 1

__How does your name at your birth year compare to its use historically?__

- My name Jordan over the years is consistent with the rise and peak of the name but on the downward slope of the name as a sharp decrease is noted just prior to my birth-year 1999 and by the year 2018 it was past half of what it used to be at it's peak around 1990.

```{python}
#| label: Q1-chart
#| code-summary: code
#| fig-cap: "Chart of Jordan throughout the years starting in the year 1970"
#| fig-align: center
# Include and execute your code here

# Filters for a Jordan
name_df = df.query('name == "Jordan"')
# This labels the chart and year:Year changes the name from lowercase to upper case and Total to Total Count.
name_chart = px.line(name_df, x='year', y='Total', color ='name', labels= {"year":"Year", "Total":"Total Count"}, title='Jordan throughout the years')
# This is making it so the year interval ticks are 10 years and then that it starts at year 1970 and not from the beginning.
name_chart.update_xaxes(title_text='Year', dtick=10, range=[1970, max(name_df['year'])])
# Updates the legend title to be uppercase
name_chart.update_layout(legend_title_text='Name')
# Adds a vertical line at the year 1999 for birth year
name_chart.add_shape(
    type="line", line=dict(dash='dash'),
    x0=1999, x1=1999, y0=0, y1=1, yref='paper'
)
# Adds a a label for birth year line
name_chart.add_annotation(
    x=2002, y=1, yref='paper', showarrow=False,
    text="Birth Year", font=dict(size=15)
)
name_chart.show()
```

## Question\|Task 2

__If you talked to someone named Brittany on the phone, what is your guess of his or her age? What ages would you not guess?__

- From the information given we can make an estimate that in the year 2024 if we are to talk with any person named Brittany they'd be around 30-38 years old with 34 being the most likely age. If we were talking to anybody from the age 21 and younger we can safely assume that they are very unlikely to be named Brittany based off of the given data.

```{python}
#| label: Q2-chart
#| code-summary: code
#| fig-cap: "What age would a Brittany be?"
#| fig-align: center
# Include and execute your code here

# Filters for a Brittany
brittany_df = df.query('name == "Brittany" and 1980 <= year <= 2024')

# Calculates the age for each row
brittany_df['age'] = 2024 - brittany_df['year']

# This labels the chart and year:Year changes the name from lowercase to upper case and Total to Total Count.
brittany_chart = px.bar(brittany_df, x='age', y='Total', color ='name', labels= {"age":"Age", "Total":"Total Count"}, title='Ages of Brittany')
# This makes it so it's one year apart and limits the youngest age to 21 for possible ages.
brittany_chart.update_xaxes(title_text='Age', dtick=1, range=[21, max(brittany_df['age'])])
# Updates the legend title to be uppercase
brittany_chart.update_layout(legend_title_text='Name')

brittany_chart.show()
```

## Question\|Task 3

__Mary, Martha, Peter, and Paul are all Christian names. From 1920 - 2000, compare the name usage of each of the four names. What trends do you notice?__

- From the given data we see an increase in all 4 names at the start of the data record with Mary having the highest increase but also the most fluctuation over the years of the name being given and declining as well. The second increase of children being named Mary could be due those returning from WW2 having kids and the decrease in children reversing back to positive numbers.

```{python}
#| label: Q3-table
#| code-summary: code
#| fig-cap: "Comparison of the chosen names Mary, Martha, Peter, and Paul"
#| fig-align: center
# Include and execute your code here
# Query for the chosen names
comparison_df = df.query('name == ["Mary", "Martha", "Paul", "Peter"] and 1910 <= year <= 1980 ')
# Adds the graph information
comparison_chart = px.line(comparison_df, x='year', y='Total', color ='name', labels= {"year":"Year", "Total":"Total Count"}, title='Christian names throughout the years')
# Updates the legend title to be uppercase
comparison_chart.update_layout(legend_title_text='Name')
comparison_chart.show()

```


## Question\|Task 4
__Think of a unique name from a famous movie. Plot the usage of that name and see how changes line up with the movie release. Does it look like the movie had an effect on usage?__

- Maverick was one of the greatest fighter pilots in Naval history right their with Ice-Man. Due to his popularity would their be a rise in the name due to who the character was? The graph shows no significant increase after the release of the movie but their is a sharp rise 25+ years after which could be due to a variety of reasons that are unknown.

```{python}
#| label: Q4-chart
#| code-summary: code
#| fig-cap: "Comparison of the movie Top-Gun and the name Maverick"
#| fig-align: center
# Include and execute your code here

# Filters for a Maverick
movie_df = df.query('name == "Maverick"')
# This labels the chart and year:Year changes the name from lowercase to upper case and Total to Total Count.
movie_chart = px.line(movie_df, x='year', y='Total', color ='name', labels= {"year":"Year", "Total":"Total Count"}, title='Feeling the Need for Speed')
# This is making it so the year interval ticks are 10 years and then that it starts at year 1980 and not from the beginning.
movie_chart.update_xaxes(title_text='Year', dtick=10, range=[1980, max(name_df['year'])])
# Updates the legend title to be uppercase
movie_chart.update_layout(legend_title_text='Name')
# Adds a vertical line at the year 1986 for release year
movie_chart.add_shape(
    type="line", line=dict(dash='dash'),
    x0=1986, x1=1986, y0=0, y1=1, yref='paper'
)
# Adds a label for release year
movie_chart.add_annotation(
    x=1993, y=1, yref='paper', showarrow=False,
    text="Top Gun release 1986", font=dict(size=15)
)

movie_chart.show()

```


## Question\|Task 5
__Elliot from E.T.__

- E.T. was released in the year 1982 and after the first release their was a sharp increase in the name with a minor decline. But the movie was re-released in 1986 and has another increase up until it peaked around 1990. The new peak from the year 2000 and beyond could be due to the ages of those who saw it as a kid as well but the graph shows more of a steady incline until a sharp rise many years after a 20 year anniversary of the movie in 2002.

```{python}
#| label: Q5-chart
#| code-summary: code
#| fig-cap: "The name Elliot and a comparison of the name from E.T. throughout the years"
#| fig-align: center
# Include and execute your code here

# Filters for a Elliot
elliot_df = df.query('name == "Elliot"')
# This labels the chart and year:Year changes the name from lowercase to upper case and Total to Total Count.
elliot_chart = px.line(elliot_df, x='year', y='Total', color ='name', labels= {"year":"Year", "Total":"Total Count"}, title='Elliot...What?')
# This is making it so the year interval ticks are 10 years and then that it starts at year 1970 and not from the beginning.
elliot_chart.update_xaxes(title_text='Year', dtick=10, range=[1955, max(name_df['year'])])
# Updates the legend title to be uppercase
elliot_chart.update_layout(legend_title_text='Name')

# Adds a vertical line at the year 1982 for first release
elliot_chart.add_shape(
    type="line", line=dict(dash='dash'),
    x0=1982, x1=1982, y0=0, y1=1, yref='paper'
)
# Adds a a label for first release
elliot_chart.add_annotation(
    x=1976, y=1, yref='paper', showarrow=False,
    text="E.T. Released", font=dict(size=12)
)

# Adds a vertical line at the year 1985 for second release
elliot_chart.add_shape(
    type="line", line=dict(dash='dash'),
    x0=1985, x1=1985, y0=0, y1=1, yref='paper'
)
# Adds a a label for second release
elliot_chart.add_annotation(
    x=1992, y=1, yref='paper', showarrow=False,
    text="Second Release", font=dict(size=12)
)

# Adds a vertical line at the year 2002 for third release
elliot_chart.add_shape(
    type="line", line=dict(dash='dash'),
    x0=2002, x1=2002, y0=0, y1=1, yref='paper'
)
# Adds a a label for third release
elliot_chart.add_annotation(
    x=2008, y=1, yref='paper', showarrow=False,
    text="Third Release", font=dict(size=12)
)

elliot_chart.show()

```
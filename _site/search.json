[
  {
    "objectID": "story_telling.html",
    "href": "story_telling.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Story Telling"
    ]
  },
  {
    "objectID": "story_telling.html#title-2-header",
    "href": "story_telling.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Story Telling"
    ]
  },
  {
    "objectID": "Story_Telling/project4.html",
    "href": "Story_Telling/project4.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Story Telling",
      "Project 4"
    ]
  },
  {
    "objectID": "Story_Telling/project2.html",
    "href": "Story_Telling/project2.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Story Telling",
      "Project 2"
    ]
  },
  {
    "objectID": "resume.html",
    "href": "resume.html",
    "title": "Jordan Moore’s Resume",
    "section": "",
    "text": "Business Analytics major, Finance minor, and Firefighter/EMT\n\nLinkedIn\n\n\nStudying Business Analytics with a minor in Finance at BYU-I and working part-time as a Firefighter/EMT. Data work for the Pioneer Baseball League and Madison Fire Department.\n\n\nMicrosoft Excel, Python, Jupyter Notebook/QMDs, Power BI, Tableau, and MySQL.\n\n\n\nPatterns and statistical correlation of certain events or relationships.\n\n\n\n\n2014-2017 Gov. John R. Rogers High School Puyallup, WA - High School Diploma\n2015-2017 Pierce College Puyallup, WA - Associates of Arts\n2019 - Present Business Analytics major with Finance minor Rexburg, ID\n\n\n\n2017 Eagle Scout\n2021 EMT of the Year FHFD\n\n\n\n2020-Present Fremont County EMS\n2020-2022 Teton County Fire and Rescue\n2021-2023 Fort Hall Fire Department\n2023-Present Madison Fire Department"
  },
  {
    "objectID": "resume.html#currently",
    "href": "resume.html#currently",
    "title": "Jordan Moore’s Resume",
    "section": "",
    "text": "Studying Business Analytics with a minor in Finance at BYU-I and working part-time as a Firefighter/EMT. Data work for the Pioneer Baseball League and Madison Fire Department.\n\n\nMicrosoft Excel, Python, Jupyter Notebook/QMDs, Power BI, Tableau, and MySQL.\n\n\n\nPatterns and statistical correlation of certain events or relationships."
  },
  {
    "objectID": "resume.html#education",
    "href": "resume.html#education",
    "title": "Jordan Moore’s Resume",
    "section": "",
    "text": "2014-2017 Gov. John R. Rogers High School Puyallup, WA - High School Diploma\n2015-2017 Pierce College Puyallup, WA - Associates of Arts\n2019 - Present Business Analytics major with Finance minor Rexburg, ID"
  },
  {
    "objectID": "resume.html#awards",
    "href": "resume.html#awards",
    "title": "Jordan Moore’s Resume",
    "section": "",
    "text": "2017 Eagle Scout\n2021 EMT of the Year FHFD"
  },
  {
    "objectID": "resume.html#publications",
    "href": "resume.html#publications",
    "title": "Isaac Newtons’s CV",
    "section": "",
    "text": "1669 Newton Sir I, De analysi per æquationes numero terminorum infinitas.\n1669 Lectiones opticæ.\netc. etc. etc.\n\n\n\n2012 Infinitesimal calculus for solutions to physics problems, SMBC patent 001"
  },
  {
    "objectID": "resume.html#occupation",
    "href": "resume.html#occupation",
    "title": "Isaac Newtons’s CV",
    "section": "",
    "text": "1600 Royal Mint, London\n\nWarden\nMinted coins\n\n1600 Lucasian professor of Mathematics, Cambridge University"
  },
  {
    "objectID": "Machine_Learning/project5.html",
    "href": "Machine_Learning/project5.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Machine Learning",
      "Project 5"
    ]
  },
  {
    "objectID": "Machine_Learning/project3.html",
    "href": "Machine_Learning/project3.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Machine Learning",
      "Project 3"
    ]
  },
  {
    "objectID": "Machine_Learning/project1.html",
    "href": "Machine_Learning/project1.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Machine Learning",
      "Project 1"
    ]
  },
  {
    "objectID": "full_stack.html",
    "href": "full_stack.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Full Stack"
    ]
  },
  {
    "objectID": "full_stack.html#title-2-header",
    "href": "full_stack.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Full Stack"
    ]
  },
  {
    "objectID": "Full_Stack/project4.html",
    "href": "Full_Stack/project4.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Full Stack",
      "Project 4"
    ]
  },
  {
    "objectID": "Full_Stack/project2.html",
    "href": "Full_Stack/project2.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Full Stack",
      "Project 2"
    ]
  },
  {
    "objectID": "exploration.html",
    "href": "exploration.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Data Exploration"
    ]
  },
  {
    "objectID": "exploration.html#title-2-header",
    "href": "exploration.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Data Exploration"
    ]
  },
  {
    "objectID": "Competition/project5.html",
    "href": "Competition/project5.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Competition",
      "Project 5"
    ]
  },
  {
    "objectID": "Competition/project3.html",
    "href": "Competition/project3.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Competition",
      "Project 3"
    ]
  },
  {
    "objectID": "Competition/project1.html",
    "href": "Competition/project1.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Competition",
      "Project 1"
    ]
  },
  {
    "objectID": "Cleansing_Projects/project4.html",
    "href": "Cleansing_Projects/project4.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Data Cleansing",
      "Project 4"
    ]
  },
  {
    "objectID": "Cleansing_Projects/project2.html",
    "href": "Cleansing_Projects/project2.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Data Cleansing",
      "Project 2"
    ]
  },
  {
    "objectID": "Cleansing_Exploration/project5.html",
    "href": "Cleansing_Exploration/project5.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top"
  },
  {
    "objectID": "Cleansing_Exploration/project3.html",
    "href": "Cleansing_Exploration/project3.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top"
  },
  {
    "objectID": "Cleansing_Exploration/project1.html",
    "href": "Cleansing_Exploration/project1.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top"
  },
  {
    "objectID": "cleansing.html",
    "href": "cleansing.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Data Cleansing"
    ]
  },
  {
    "objectID": "cleansing.html#title-2-header",
    "href": "cleansing.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Data Cleansing"
    ]
  },
  {
    "objectID": "Cleansing_Exploration/project2.html",
    "href": "Cleansing_Exploration/project2.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top"
  },
  {
    "objectID": "Cleansing_Exploration/project4.html",
    "href": "Cleansing_Exploration/project4.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top"
  },
  {
    "objectID": "Cleansing_Projects/project1.html",
    "href": "Cleansing_Projects/project1.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Data Cleansing",
      "Project 1"
    ]
  },
  {
    "objectID": "Cleansing_Projects/project3.html",
    "href": "Cleansing_Projects/project3.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Data Cleansing",
      "Project 3"
    ]
  },
  {
    "objectID": "Cleansing_Projects/project5.html",
    "href": "Cleansing_Projects/project5.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Data Cleansing",
      "Project 5"
    ]
  },
  {
    "objectID": "Competition/project2.html",
    "href": "Competition/project2.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Competition",
      "Project 2"
    ]
  },
  {
    "objectID": "Competition/project4.html",
    "href": "Competition/project4.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Competition",
      "Project 4"
    ]
  },
  {
    "objectID": "competition.html",
    "href": "competition.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Competition"
    ]
  },
  {
    "objectID": "competition.html#title-2-header",
    "href": "competition.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Competition"
    ]
  },
  {
    "objectID": "Full_Stack/project1.html",
    "href": "Full_Stack/project1.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Full Stack",
      "Project 1"
    ]
  },
  {
    "objectID": "Full_Stack/project3.html",
    "href": "Full_Stack/project3.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Full Stack",
      "Project 3"
    ]
  },
  {
    "objectID": "Full_Stack/project5.html",
    "href": "Full_Stack/project5.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Full Stack",
      "Project 5"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Jordan Moore",
    "section": "",
    "text": "Explore my page to see my past projects and experience\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "index.html#title-2-header",
    "href": "index.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics"
  },
  {
    "objectID": "Machine_Learning/project2.html",
    "href": "Machine_Learning/project2.html",
    "title": "Client Report - Project 5",
    "section": "",
    "text": "Show the code\nimport pandas as pd \nimport numpy as np\nimport sqlite3\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\n\nElevator pitch\nKey Insights\n-Some of the key insights noted when predicting income is an Education above a High School Diploma, Finding Jar-Jar Bikns unfavorable, and having being a male. We can see throughout this time how messy data entry and usage was and the difficulty to clean it up and make it presentable and in our case make it useful.\n\n\nShow the code\n# %%\nurl = 'https://github.com/fivethirtyeight/data/raw/master/star-wars-survey/StarWars.csv'\n# https://stackoverflow.com/questions/18171739/unicodedecodeerror-when-reading-csv-file-in-pandas-with-python\n\ndf_cols = pd.read_csv(url, encoding = \"ISO-8859-1\", nrows = 1).melt()\ndf = pd.read_csv(url, encoding = \"ISO-8859-1\", header = None )\n\n\n\n\nQUESTION|TASK 1\nTODO:COPY PASTE QUESTION|TASK 1 FROM THE PROJECT HERE\n-Old column names shown first and transitioned to the new column names.\n\n\nShow the code\nold_column_names = df.iloc[0]\nold_column_names\n\n\n0                                          RespondentID\n1     Have you seen any of the 6 films in the Star W...\n2     Do you consider yourself to be a fan of the St...\n3     Which of the following Star Wars films have yo...\n4                                                   NaN\n5                                                   NaN\n6                                                   NaN\n7                                                   NaN\n8                                                   NaN\n9     Please rank the Star Wars films in order of pr...\n10                                                  NaN\n11                                                  NaN\n12                                                  NaN\n13                                                  NaN\n14                                                  NaN\n15    Please state whether you view the following ch...\n16                                                  NaN\n17                                                  NaN\n18                                                  NaN\n19                                                  NaN\n20                                                  NaN\n21                                                  NaN\n22                                                  NaN\n23                                                  NaN\n24                                                  NaN\n25                                                  NaN\n26                                                  NaN\n27                                                  NaN\n28                                                  NaN\n29                          Which character shot first?\n30         Are you familiar with the Expanded Universe?\n31    Do you consider yourself to be a fan of the Ex...\n32    Do you consider yourself to be a fan of the St...\n33                                               Gender\n34                                                  Age\n35                                     Household Income\n36                                            Education\n37                             Location (Census Region)\nName: 0, dtype: object\n\n\n\n\nShow the code\ndf = df.iloc[1:]\n\n\n\n\nShow the code\nnew_column_names = [\n    \"Respondant ID\",\n    \"seen_any\",\n    \"fan_star_wars\",\n    \"seen_episode1\",\n    \"seen_episode2\",\n    \"seen_episode3\",\n    \"seen_episode4\",\n    \"seen_episode5\",\n    \"seen_episode6\",\n    \"rank_episode1\",\n    \"rank_episode2\",\n    \"rank_episode3\",\n    \"rank_episode4\",\n    \"rank_episode5\",\n    \"rank_episode6\",\n    \"rate_han_solo\",\n    \"rate_luke_skywalker\",\n    \"rate_princess_leia_organa\",\n    \"rate_anakin_skywalker\",\n    \"rate_obi_wan_kenobi\",\n    \"rate_emperor_palpatine\",\n    \"rate_darth_vader\",\n    \"rate_lando_calrissian\",\n    \"rate_boba_fett\",\n    \"rate_c-3p0\",\n    \"rate_r2_d2\",\n    \"rate_jar_jar_binks\",\n    \"rate_padme_amidala\",\n    \"rate_yoda\",\n    \"shot_first\",\n    \"expanded_universe\",\n    \"expanded_fan\",\n    \"star_trek_fan\",\n    \"gender\",\n    \"age\",\n    \"income\",\n    \"education\",\n    \"location\"\n]\n\n# Rename the columns\ndf.columns = new_column_names\ndf.columns\n\n\nIndex(['Respondant ID', 'seen_any', 'fan_star_wars', 'seen_episode1',\n       'seen_episode2', 'seen_episode3', 'seen_episode4', 'seen_episode5',\n       'seen_episode6', 'rank_episode1', 'rank_episode2', 'rank_episode3',\n       'rank_episode4', 'rank_episode5', 'rank_episode6', 'rate_han_solo',\n       'rate_luke_skywalker', 'rate_princess_leia_organa',\n       'rate_anakin_skywalker', 'rate_obi_wan_kenobi',\n       'rate_emperor_palpatine', 'rate_darth_vader', 'rate_lando_calrissian',\n       'rate_boba_fett', 'rate_c-3p0', 'rate_r2_d2', 'rate_jar_jar_binks',\n       'rate_padme_amidala', 'rate_yoda', 'shot_first', 'expanded_universe',\n       'expanded_fan', 'star_trek_fan', 'gender', 'age', 'income', 'education',\n       'location'],\n      dtype='object')\n\n\n\n\nQUESTION|TASK 2A-2F\nClean and format the data so that it can be used in a machine learning model. As you format the data, you should complete each item listed below. In your final report provide example(s) of the reformatted data with a short description of the changes made. Filter the dataset to respondents that have seen at least one film. Create a new column that converts the age ranges to a single number. Drop the age range categorical column. Create a new column that converts the education groupings to a single number. Drop the school categorical column. Create a new column that converts the income ranges to a single number. Drop the income range categorical column. Create your target (also known as “y” or “label”) column based on the new income range column. One-hot encode all remaining categorical columns.\n-Starting from raw data and changing age, income, and education in a way that could be used in machine learning algorithm. Converted age range to a base age, education into a grouping based on 1 being less than high school and 5 being a graduate degree, and income into a single number. The income range was used in the machine learning to predict who or what you need to look at when trying to find someone who makes more than $50,000 and is a fan of Star Wars.\n\n\nShow the code\nstarwars = df[df['seen_any'] == 'Yes']\nstarwars.head(6)\n\n\n\n\n\n\n\n\n\n\nRespondant ID\nseen_any\nfan_star_wars\nseen_episode1\nseen_episode2\nseen_episode3\nseen_episode4\nseen_episode5\nseen_episode6\nrank_episode1\n...\nrate_yoda\nshot_first\nexpanded_universe\nexpanded_fan\nstar_trek_fan\ngender\nage\nincome\neducation\nlocation\n\n\n\n\n2\n3292879998\nYes\nYes\nStar Wars: Episode I The Phantom Menace\nStar Wars: Episode II Attack of the Clones\nStar Wars: Episode III Revenge of the Sith\nStar Wars: Episode IV A New Hope\nStar Wars: Episode V The Empire Strikes Back\nStar Wars: Episode VI Return of the Jedi\n3\n...\nVery favorably\nI don't understand this question\nYes\nNo\nNo\nMale\n18-29\nNaN\nHigh school degree\nSouth Atlantic\n\n\n4\n3292765271\nYes\nNo\nStar Wars: Episode I The Phantom Menace\nStar Wars: Episode II Attack of the Clones\nStar Wars: Episode III Revenge of the Sith\nNaN\nNaN\nNaN\n1\n...\nUnfamiliar (N/A)\nI don't understand this question\nNo\nNaN\nNo\nMale\n18-29\n$0 - $24,999\nHigh school degree\nWest North Central\n\n\n5\n3292763116\nYes\nYes\nStar Wars: Episode I The Phantom Menace\nStar Wars: Episode II Attack of the Clones\nStar Wars: Episode III Revenge of the Sith\nStar Wars: Episode IV A New Hope\nStar Wars: Episode V The Empire Strikes Back\nStar Wars: Episode VI Return of the Jedi\n5\n...\nVery favorably\nI don't understand this question\nNo\nNaN\nYes\nMale\n18-29\n$100,000 - $149,999\nSome college or Associate degree\nWest North Central\n\n\n6\n3292731220\nYes\nYes\nStar Wars: Episode I The Phantom Menace\nStar Wars: Episode II Attack of the Clones\nStar Wars: Episode III Revenge of the Sith\nStar Wars: Episode IV A New Hope\nStar Wars: Episode V The Empire Strikes Back\nStar Wars: Episode VI Return of the Jedi\n5\n...\nSomewhat favorably\nGreedo\nYes\nNo\nNo\nMale\n18-29\n$100,000 - $149,999\nSome college or Associate degree\nWest North Central\n\n\n7\n3292719380\nYes\nYes\nStar Wars: Episode I The Phantom Menace\nStar Wars: Episode II Attack of the Clones\nStar Wars: Episode III Revenge of the Sith\nStar Wars: Episode IV A New Hope\nStar Wars: Episode V The Empire Strikes Back\nStar Wars: Episode VI Return of the Jedi\n1\n...\nVery favorably\nHan\nYes\nNo\nYes\nMale\n18-29\n$25,000 - $49,999\nBachelor degree\nMiddle Atlantic\n\n\n8\n3292684787\nYes\nYes\nStar Wars: Episode I The Phantom Menace\nStar Wars: Episode II Attack of the Clones\nStar Wars: Episode III Revenge of the Sith\nStar Wars: Episode IV A New Hope\nStar Wars: Episode V The Empire Strikes Back\nStar Wars: Episode VI Return of the Jedi\n6\n...\nVery favorably\nHan\nYes\nNo\nNo\nMale\n18-29\nNaN\nHigh school degree\nEast North Central\n\n\n\n\n6 rows × 38 columns\n\n\n\n\n\n\nShow the code\nage_range = (df.age\n            .str.replace('18-29', '18')\n            .str.replace('30-44', '30')\n            .str.replace('45-60', '45')\n            .str.replace('&gt; 60', '60')\n            .replace('Response', np.nan)\n            .astype('float'))\n\n\n\n\nShow the code\nincome_num = (df.income\n              .str.split(\"-\", expand=True)\n              .rename(columns={0: 'income_min', 1: 'income_max'})\n              .apply(lambda x: x.str.replace(\"$\", \"\").str.replace(\",\", \"\").str.replace(\"+\", \"\"))\n              .replace('Response', np.nan)\n              .astype('float')\n              .fillna(0))\n\n\n\n\nShow the code\nnew_education = (df.education\n             .str.replace('Less than high school degree', '1')\n             .str.replace('High school degree', '2')\n             .str.replace('Some college or Associate degree', '3')\n             .str.replace('Bachelor degree', '4')\n             .str.replace('Graduate degree', '5')\n             .replace('Response', np.nan)\n             .astype('float')\n             .fillna(0))\n\n\n\n\nShow the code\n# How to join columns back into a df\ndf_example = pd.concat([\n    age_range,\n    income_num.income_min,\n    new_education\n], axis = 1)\ndf_example.head(6)\n\n\n\n\n\n\n\n\n\n\nage\nincome_min\neducation\n\n\n\n\n1\nNaN\n0.0\n0.0\n\n\n2\n18.0\n0.0\n2.0\n\n\n3\n18.0\n0.0\n4.0\n\n\n4\n18.0\n0.0\n2.0\n\n\n5\n18.0\n100000.0\n3.0\n\n\n6\n18.0\n100000.0\n3.0\n\n\n\n\n\n\n\n\n\n\nShow the code\nstarwars = starwars.drop(['age', 'income', 'education'], axis=1)\nstarwars_ml = pd.concat([starwars, df_example], axis=1)\nstarwars_ml = starwars_ml.dropna(subset=['seen_any'])\nstarwars_ml.head(10)\n\n\n\n\n\n\n\n\n\n\nRespondant ID\nseen_any\nfan_star_wars\nseen_episode1\nseen_episode2\nseen_episode3\nseen_episode4\nseen_episode5\nseen_episode6\nrank_episode1\n...\nrate_yoda\nshot_first\nexpanded_universe\nexpanded_fan\nstar_trek_fan\ngender\nlocation\nage\nincome_min\neducation\n\n\n\n\n2\n3292879998\nYes\nYes\nStar Wars: Episode I The Phantom Menace\nStar Wars: Episode II Attack of the Clones\nStar Wars: Episode III Revenge of the Sith\nStar Wars: Episode IV A New Hope\nStar Wars: Episode V The Empire Strikes Back\nStar Wars: Episode VI Return of the Jedi\n3\n...\nVery favorably\nI don't understand this question\nYes\nNo\nNo\nMale\nSouth Atlantic\n18.0\n0.0\n2.0\n\n\n4\n3292765271\nYes\nNo\nStar Wars: Episode I The Phantom Menace\nStar Wars: Episode II Attack of the Clones\nStar Wars: Episode III Revenge of the Sith\nNaN\nNaN\nNaN\n1\n...\nUnfamiliar (N/A)\nI don't understand this question\nNo\nNaN\nNo\nMale\nWest North Central\n18.0\n0.0\n2.0\n\n\n5\n3292763116\nYes\nYes\nStar Wars: Episode I The Phantom Menace\nStar Wars: Episode II Attack of the Clones\nStar Wars: Episode III Revenge of the Sith\nStar Wars: Episode IV A New Hope\nStar Wars: Episode V The Empire Strikes Back\nStar Wars: Episode VI Return of the Jedi\n5\n...\nVery favorably\nI don't understand this question\nNo\nNaN\nYes\nMale\nWest North Central\n18.0\n100000.0\n3.0\n\n\n6\n3292731220\nYes\nYes\nStar Wars: Episode I The Phantom Menace\nStar Wars: Episode II Attack of the Clones\nStar Wars: Episode III Revenge of the Sith\nStar Wars: Episode IV A New Hope\nStar Wars: Episode V The Empire Strikes Back\nStar Wars: Episode VI Return of the Jedi\n5\n...\nSomewhat favorably\nGreedo\nYes\nNo\nNo\nMale\nWest North Central\n18.0\n100000.0\n3.0\n\n\n7\n3292719380\nYes\nYes\nStar Wars: Episode I The Phantom Menace\nStar Wars: Episode II Attack of the Clones\nStar Wars: Episode III Revenge of the Sith\nStar Wars: Episode IV A New Hope\nStar Wars: Episode V The Empire Strikes Back\nStar Wars: Episode VI Return of the Jedi\n1\n...\nVery favorably\nHan\nYes\nNo\nYes\nMale\nMiddle Atlantic\n18.0\n25000.0\n4.0\n\n\n8\n3292684787\nYes\nYes\nStar Wars: Episode I The Phantom Menace\nStar Wars: Episode II Attack of the Clones\nStar Wars: Episode III Revenge of the Sith\nStar Wars: Episode IV A New Hope\nStar Wars: Episode V The Empire Strikes Back\nStar Wars: Episode VI Return of the Jedi\n6\n...\nVery favorably\nHan\nYes\nNo\nNo\nMale\nEast North Central\n18.0\n0.0\n2.0\n\n\n9\n3292663732\nYes\nYes\nStar Wars: Episode I The Phantom Menace\nStar Wars: Episode II Attack of the Clones\nStar Wars: Episode III Revenge of the Sith\nStar Wars: Episode IV A New Hope\nStar Wars: Episode V The Empire Strikes Back\nStar Wars: Episode VI Return of the Jedi\n4\n...\nVery favorably\nHan\nNo\nNaN\nYes\nMale\nSouth Atlantic\n18.0\n0.0\n2.0\n\n\n10\n3292654043\nYes\nYes\nStar Wars: Episode I The Phantom Menace\nStar Wars: Episode II Attack of the Clones\nStar Wars: Episode III Revenge of the Sith\nStar Wars: Episode IV A New Hope\nStar Wars: Episode V The Empire Strikes Back\nStar Wars: Episode VI Return of the Jedi\n5\n...\nSomewhat favorably\nHan\nNo\nNaN\nNo\nMale\nSouth Atlantic\n18.0\n0.0\n3.0\n\n\n11\n3292640424\nYes\nNo\nNaN\nStar Wars: Episode II Attack of the Clones\nNaN\nNaN\nNaN\nNaN\n1\n...\nVery favorably\nI don't understand this question\nNo\nNaN\nNo\nMale\nPacific\n18.0\n25000.0\n3.0\n\n\n12\n3292637870\nYes\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n0.0\n0.0\n\n\n\n\n10 rows × 38 columns\n\n\n\n\n-One hot encode\n\n\nShow the code\n# List of columns to transform\ncolumns_to_transform = [\n    \"seen_episode1\",\n    \"seen_episode2\",\n    \"seen_episode3\",\n    \"seen_episode4\",\n    \"seen_episode5\",\n    \"seen_episode6\",\n]\nfor column in columns_to_transform:\n    starwars_ml[column] = starwars_ml[column].map(lambda x: \"No\" if pd.isna(x) else \"Yes\")\n\n# The columns I'm transforming\nrating_columns = [\n    \"rate_han_solo\",\n    \"rate_luke_skywalker\",\n    \"rate_princess_leia_organa\",\n    \"rate_anakin_skywalker\",\n    \"rate_obi_wan_kenobi\",\n    \"rate_emperor_palpatine\",\n    \"rate_darth_vader\",\n    \"rate_lando_calrissian\",\n    \"rate_boba_fett\",\n    \"rate_c-3p0\",\n    \"rate_r2_d2\",\n    \"rate_jar_jar_binks\",\n    \"rate_padme_amidala\",\n    \"rate_yoda\",\n]\n\ndef map_ratings(rating):\n    if rating in [\"Very favorably\", \"Somewhat favorably\"]:\n        return \"Favorably\"\n    elif rating in [\"Very unfavorably\", \"Somewhat unfavorably\"]:\n        return \"Unfavorable\"\n    elif rating in [\"Neither favorably nor unfavorably (neutral)\", np.nan, \"Unfamiliar (N/A)\"]:\n        return \"Unfamiliar\"\n    else:\n        return rating  # Just in case there are other categories not mentioned\n\nfor column in rating_columns:\n    starwars_ml[column] = starwars_ml[column].apply(map_ratings)\n\nstarwars_ml['shot_first'] = starwars_ml['shot_first'].apply(lambda x: \"Unfamiliar\" if x == \"I don't understand this question\" or pd.isna(x) else x)\n    \n    \nstarwars_ml[\"fan_star_wars\"] = starwars_ml[\"fan_star_wars\"].apply(lambda x: \"No\" if pd.isna(x) else x)\nstarwars_ml[\"rank_episode1\"] = starwars_ml[\"rank_episode1\"].apply(lambda x: \"Unfamiliar\" if pd.isna(x) else x)\nstarwars_ml[\"rank_episode2\"] = starwars_ml[\"rank_episode2\"].apply(lambda x: \"Unfamiliar\" if pd.isna(x) else x)\nstarwars_ml[\"rank_episode3\"] = starwars_ml[\"rank_episode3\"].apply(lambda x: \"Unfamiliar\" if pd.isna(x) else x)\nstarwars_ml[\"rank_episode4\"] = starwars_ml[\"rank_episode4\"].apply(lambda x: \"Unfamiliar\" if pd.isna(x) else x)\nstarwars_ml[\"rank_episode5\"] = starwars_ml[\"rank_episode5\"].apply(lambda x: \"Unfamiliar\" if pd.isna(x) else x)\nstarwars_ml[\"rank_episode6\"] = starwars_ml[\"rank_episode6\"].apply(lambda x: \"Unfamiliar\" if pd.isna(x) else x)\nstarwars_ml[\"expanded_universe\"] = starwars_ml[\"expanded_universe\"].apply(lambda x: \"No\" if pd.isna(x) else x)\nstarwars_ml[\"expanded_fan\"] = starwars_ml[\"expanded_fan\"].apply(lambda x: \"No\" if pd.isna(x) else x)\nstarwars_ml[\"star_trek_fan\"] = starwars_ml[\"star_trek_fan\"].apply(lambda x: \"No\" if pd.isna(x) else x)\nstarwars_ml['income_label'] = starwars_ml['income_min'].apply(lambda x: 1 if x &gt; 50000 else 0)\nstarwars_ml.dropna(subset=['gender', 'location', 'age'], inplace=True)\n\n\ncolumns_to_transform = ['seen_any', 'fan_star_wars', 'seen_episode1',\n    'seen_episode2', 'seen_episode3', 'seen_episode4', 'seen_episode5',\n    'seen_episode6', 'rank_episode1', 'rank_episode2', 'rank_episode3',\n    'rank_episode4', 'rank_episode5', 'rank_episode6', 'rate_han_solo',\n    'rate_luke_skywalker', 'rate_princess_leia_organa',\n    'rate_anakin_skywalker', 'rate_obi_wan_kenobi',\n    'rate_emperor_palpatine', 'rate_darth_vader', 'rate_lando_calrissian',\n    'rate_boba_fett', 'rate_c-3p0', 'rate_r2_d2', 'rate_jar_jar_binks',\n    'rate_padme_amidala', 'rate_yoda', 'shot_first', 'expanded_universe',\n    'expanded_fan', 'star_trek_fan', 'gender', 'location', 'age',\n    'income_min', 'education'\n]\n\n# Apply pd.get_dummies to all columns except 'income_min'\nstarwars_ml = pd.get_dummies(starwars_ml, columns=columns_to_transform, drop_first=True)\n\n\n\n\nQUESTION|TASK 3\nValidate that the data provided on GitHub lines up with the article by recreating 2 of the visuals from the article.\n-Here we have two graphs based on the articles information. The data was incorrect on my graphing.\n\n\nShow the code\nimport matplotlib.pyplot as plt\n\nstar_wars_bar = df\nstar_wars_bar = df[df['seen_any'] == 'Yes']\n\nepisode_columns = [\"seen_episode1\", \"seen_episode2\", \"seen_episode3\", \"seen_episode4\", \"seen_episode5\", \"seen_episode6\"]\nepisode_titles = ['Episode IV - A New Hope', 'Episode V - The Empire Strikes Back', \n                  'Episode VI - Return of the Jedi', 'Episode I - The Phantom Menace', \n                  'Episode II - Attack of the Clones', 'Episode III - Revenge of the Sith']\n\npercentages = [(star_wars_bar[column].notna().sum() / len(star_wars_bar)) * 100 for column in episode_columns]\nplot_data = pd.DataFrame({'Episode': episode_titles, 'Percentage': percentages})\nplt.figure(figsize=(10, 8))\nplt.barh(plot_data['Episode'], plot_data['Percentage'], color='blue')\n\nfor index, value in enumerate(plot_data['Percentage']):\n    plt.text(value, index, f\"{value:.2f}%\", va='center')\n\nplt.xlabel('Percentage')\nplt.ylabel('Episode')\nplt.title(\"Which 'Star Wars' Movies Have You Seen?\")\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nstar_wars_charts = df\n\n# Filter data where seen_any = Yes and have seen all episodes\nseen_all_data = star_wars_charts[(star_wars_charts['seen_any'] == 'Yes') & \n                                 (star_wars_charts['seen_episode1'].notna()) &\n                                 (star_wars_charts['seen_episode2'].notna()) &\n                                 (star_wars_charts['seen_episode3'].notna()) &\n                                 (star_wars_charts['seen_episode4'].notna()) &\n                                 (star_wars_charts['seen_episode5'].notna()) &\n                                 (star_wars_charts['seen_episode6'].notna())]\n\n# Calculate percentages of respondents who rated each episode as 6\nepisode_columns = ['rank_episode1', 'rank_episode2', 'rank_episode3',\n                   'rank_episode4', 'rank_episode5', 'rank_episode6']\nepisode_titles = ['Episode IV - A New Hope', 'Episode V - The Empire Strikes Back', \n                  'Episode VI - Return of the Jedi', 'Episode I - The Phantom Menace', \n                  'Episode II - Attack of the Clones', 'Episode III - Revenge of the Sith']\n\nseen_all_data = seen_all_data[['rank_episode1', 'rank_episode2', 'rank_episode3', 'rank_episode4', 'rank_episode5', 'rank_episode6']]\nseen_all_data[episode_columns] = seen_all_data[episode_columns].fillna(-1).astype(int)\nrank_episode_dtypes = seen_all_data[episode_columns].dtypes\n\ntotal_respondents = len(seen_all_data)\nepisode_counts = seen_all_data[episode_columns].apply(lambda x: (x == 6).sum())\nepisode_percentages = (episode_counts / total_respondents) * 100\n\nplot_data = pd.DataFrame({'rank_episode': episode_titles, 'percentage': episode_percentages})\nplot_data.set_index('rank_episode', inplace=True)\n\nplt.figure(figsize=(10, 8))\nplot_data['percentage'].plot(kind='barh', color='blue')\nfor index, value in enumerate(plot_data['percentage']):\n    plt.text(value, index, f\"{value:.2f}%\", va='center')\nplt.xlabel('Percentage')\nplt.ylabel('Rank Episode')\nplt.title(\"What's the Best 'Star Wars' Movie?\")\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\nQUESTION|TASK 4 and Stretch 1\nBuild a machine learning model that predicts whether a person makes more than $50k. Describe your model and report the accuracy. Build a machine learning model that predicts whether a person makes more than $50k. With accuracy of at least 65%. Describe your model and report the accuracy.\n-Both question 4 and stretch question 1 were combined as the machine learning we used, which was Random Forest Classifier, found a 77% predictablity rate. Second we see the importance of education when predicting income for Star Wars Fans.\n\n\nShow the code\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import classification_report\n\nX = starwars_ml.drop(columns=['Respondant ID', 'income_label','income_min_100000.0','income_min_150000.0','income_min_50000.0','income_min_25000.0'])\ny = starwars_ml['income_label']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.34, random_state=76)\n\nrf_clf = RandomForestClassifier(n_estimators=10)\nrf_clf.fit(X_train, y_train)\n\ny_pred = rf_clf.predict(X_test)\n\nprint(classification_report(y_test, y_pred))\n\n\n              precision    recall  f1-score   support\n\n           0       0.80      0.97      0.88       223\n           1       0.22      0.04      0.06        56\n\n    accuracy                           0.78       279\n   macro avg       0.51      0.50      0.47       279\nweighted avg       0.68      0.78      0.71       279\n\n\n\n\n\nShow the code\nimport plotly.express as px\n\ndf_features = pd.DataFrame(\n    {'f_names': X_train.columns, \n     'f_values': rf_clf.feature_importances_}\n).sort_values('f_values', ascending=False)\n\nchart = px.bar(df_features.head(14),\n    x='f_values', \n    y='f_names'\n)\n\nchart.update_layout(yaxis={'categoryorder':'total ascending'})\nchart.update_layout(\n    title_text=\"Weighted values for Random Forest\",\n    title_x=0.5,\n    annotations=[\n        dict(\n            text=\"The highest weighted values used by Random Forest prediction with the variables on the left and the weight on the bottom\",\n            showarrow=False,\n            xref=\"paper\",\n            yref=\"paper\",\n            x=0.5,\n            y=-0.2,\n            font=dict(size=12)\n        )\n    ]\n)\nchart.show()\n\n\n                                                \n\n\n\n\n\n\n Back to top",
    "crumbs": [
      "Machine Learning",
      "Project 2"
    ]
  },
  {
    "objectID": "Machine_Learning/project4.html",
    "href": "Machine_Learning/project4.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Machine Learning",
      "Project 4"
    ]
  },
  {
    "objectID": "ml.html",
    "href": "ml.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Machine Learning"
    ]
  },
  {
    "objectID": "ml.html#title-2-header",
    "href": "ml.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Machine Learning"
    ]
  },
  {
    "objectID": "Story_Telling/project1.html",
    "href": "Story_Telling/project1.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Story Telling",
      "Project 1"
    ]
  },
  {
    "objectID": "Story_Telling/project3.html",
    "href": "Story_Telling/project3.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Story Telling",
      "Project 3"
    ]
  },
  {
    "objectID": "Story_Telling/project5.html",
    "href": "Story_Telling/project5.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Story Telling",
      "Project 5"
    ]
  },
  {
    "objectID": "resume.html#occupations",
    "href": "resume.html#occupations",
    "title": "Jordan Moore’s Resume",
    "section": "",
    "text": "2020-Present Fremont County EMS\n2020-2022 Teton County Fire and Rescue\n2021-2023 Fort Hall Fire Department\n2023-Present Madison Fire Department"
  }
]